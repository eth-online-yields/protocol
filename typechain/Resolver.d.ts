/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ResolverInterface extends ethers.utils.Interface {
  functions: {
    "getTarget()": FunctionFragment;
    "performMigration()": FunctionFragment;
    "setTarget(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "getTarget", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "performMigration",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "setTarget", values: [string]): string;

  decodeFunctionResult(functionFragment: "getTarget", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "performMigration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setTarget", data: BytesLike): Result;

  events: {};
}

export class Resolver extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ResolverInterface;

  functions: {
    getTarget(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getTarget()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    performMigration(overrides?: Overrides): Promise<ContractTransaction>;

    "performMigration()"(overrides?: Overrides): Promise<ContractTransaction>;

    setTarget(
      _target: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setTarget(address)"(
      _target: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  getTarget(overrides?: CallOverrides): Promise<string>;

  "getTarget()"(overrides?: CallOverrides): Promise<string>;

  performMigration(overrides?: Overrides): Promise<ContractTransaction>;

  "performMigration()"(overrides?: Overrides): Promise<ContractTransaction>;

  setTarget(
    _target: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setTarget(address)"(
    _target: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    getTarget(overrides?: CallOverrides): Promise<string>;

    "getTarget()"(overrides?: CallOverrides): Promise<string>;

    performMigration(overrides?: CallOverrides): Promise<void>;

    "performMigration()"(overrides?: CallOverrides): Promise<void>;

    setTarget(_target: string, overrides?: CallOverrides): Promise<boolean>;

    "setTarget(address)"(
      _target: string,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    getTarget(overrides?: CallOverrides): Promise<BigNumber>;

    "getTarget()"(overrides?: CallOverrides): Promise<BigNumber>;

    performMigration(overrides?: Overrides): Promise<BigNumber>;

    "performMigration()"(overrides?: Overrides): Promise<BigNumber>;

    setTarget(_target: string, overrides?: Overrides): Promise<BigNumber>;

    "setTarget(address)"(
      _target: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getTarget(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getTarget()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    performMigration(overrides?: Overrides): Promise<PopulatedTransaction>;

    "performMigration()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    setTarget(
      _target: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setTarget(address)"(
      _target: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
